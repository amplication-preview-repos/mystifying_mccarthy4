/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested, IsInt } from "class-validator";
import { DbcWhereUniqueInput } from "../../dbc/base/DbcWhereUniqueInput";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { RecordCreateNestedManyWithoutVehiclesInput } from "./RecordCreateNestedManyWithoutVehiclesInput";
import { VehicleSecretCreateNestedManyWithoutVehiclesInput } from "./VehicleSecretCreateNestedManyWithoutVehiclesInput";

@InputType()
class VehicleCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  color?: string | null;

  @ApiProperty({
    required: false,
    type: () => DbcWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DbcWhereUniqueInput)
  @IsOptional()
  @Field(() => DbcWhereUniqueInput, {
    nullable: true,
  })
  dbc?: DbcWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  image?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  make?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  model?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => RecordCreateNestedManyWithoutVehiclesInput,
  })
  @ValidateNested()
  @Type(() => RecordCreateNestedManyWithoutVehiclesInput)
  @IsOptional()
  @Field(() => RecordCreateNestedManyWithoutVehiclesInput, {
    nullable: true,
  })
  records?: RecordCreateNestedManyWithoutVehiclesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  secrets?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  trim?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  typeField?: string | null;

  @ApiProperty({
    required: false,
    type: () => VehicleSecretCreateNestedManyWithoutVehiclesInput,
  })
  @ValidateNested()
  @Type(() => VehicleSecretCreateNestedManyWithoutVehiclesInput)
  @IsOptional()
  @Field(() => VehicleSecretCreateNestedManyWithoutVehiclesInput, {
    nullable: true,
  })
  vehicleSecrets?: VehicleSecretCreateNestedManyWithoutVehiclesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  vin?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  year?: number | null;
}

export { VehicleCreateInput as VehicleCreateInput };
